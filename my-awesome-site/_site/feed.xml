<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-08-11T11:44:10+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Arc4U in Jekyll!</title><link href="http://localhost:4000/jekyll/update/2023/08/05/LoggingArc4U.html" rel="alternate" type="text/html" title="Arc4U in Jekyll!" /><published>2023-08-05T11:04:48+02:00</published><updated>2023-08-05T11:04:48+02:00</updated><id>http://localhost:4000/jekyll/update/2023/08/05/LoggingArc4U</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/08/05/LoggingArc4U.html"><![CDATA[<h1 id="what-can-you-do-with-arc4u">What can you do with Arc4u?</h1>

<h2 id="elia-architectural-framework">Elia Architectural Framework</h2>

<p>Arc4u is a framework providing support for many common tasks and problems that need to be solved in Elia applications written <a href="http://in.NET">in.NET</a> (Core).</p>

<p>The specific areas of the support that is provided are:</p>

<ul>
  <li>Logging / Diagnostics</li>
  <li>Dependency Injection</li>
  <li>Serialization</li>
  <li>Caching</li>
  <li>OData support</li>
  <li>Authentication</li>
  <li>gRPC</li>
  <li>Data Layer helpers</li>
  <li>Entity Framework Core helpers</li>
  <li>Unclassified</li>
</ul>

<p>In addition, Arc4u provides helpers, abstractions, extensions and utilities for specific .NET products and technologies used in Elia projects:</p>

<ul>
  <li><a href="https://prismlibrary.com/">Prism</a></li>
  <li><a href="https://www.mongodb.com/">MongoDB</a></li>
  <li><a href="https://particular.net/nservicebus">NServiceBus</a></li>
  <li><a href="https://kubemq.io/">KubeMQ</a></li>
</ul>

<h2 id="logging--diagnostics">Logging / Diagnostics</h2>

<h3 id="logging-category-support">Logging category support</h3>

<p>Although .NET Core already provides logging, Arc4u provides methods specifying different common logging categories in Elia applications:</p>

<ul>
  <li>Technical: logging concerning technical (IT) stuff</li>
  <li>Business: logging that concerns business rules</li>
  <li>Monitoring: logging concerning performance monitoring like CPU and memory</li>
</ul>

<p>They correspond to what is defined in <a href="https://github.com/GFlisch/Arc4u/blob/master/src/Arc4u.Standard.Diagnostics/MessageCategory.cs">Arc4u/MessageCategory.cs at master · GFlisch/Arc4u (github.com)</a> . The categories are used in reporting and other scenarios where it is necessary to reduce “unwanted noise” in what is being logged.</p>

<p>These categories are built on the standard .NET Core ILogger and are supported in a fluent way. See <a href="https://github.com/GFlisch/Arc4u/blob/master/src/Arc4u.Standard.Diagnostics/Fluent/ILoggerExtension.cs">Arc4u/ILoggerExtension.cs at master · GFlisch/Arc4u (github.com)</a>. This allows us to write:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>logger.Technical().Information(&lt;span class="hljs-string"&gt;"Start the Api process."&lt;/span&gt;).Log();
logger.Business().Warning(&lt;span class="hljs-string"&gt;"User Not Found"&lt;/span&gt;).Log();
</code></pre></div></div>

<p>… resulting in cleaner code.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install --production
NODE_ENV=production node app
</code></pre></div></div>

<h3 id="paris">Paris</h3>

<p>Paris is the capital of France.</p>

<h3 id="tokyo">Tokyo</h3>

<p>Tokyo is the capital of Japan.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[What can you do with Arc4u? Elia Architectural Framework Arc4u is a framework providing support for many common tasks and problems that need to be solved in Elia applications written in.NET (Core). The specific areas of the support that is provided are: Logging / Diagnostics Dependency Injection Serialization Caching OData support Authentication gRPC Data Layer helpers Entity Framework Core helpers Unclassified In addition, Arc4u provides helpers, abstractions, extensions and utilities for specific .NET products and technologies used in Elia projects: Prism MongoDB NServiceBus KubeMQ Logging / Diagnostics Logging category support Although .NET Core already provides logging, Arc4u provides methods specifying different common logging categories in Elia applications: Technical: logging concerning technical (IT) stuff Business: logging that concerns business rules Monitoring: logging concerning performance monitoring like CPU and memory They correspond to what is defined in Arc4u/MessageCategory.cs at master · GFlisch/Arc4u (github.com) . The categories are used in reporting and other scenarios where it is necessary to reduce “unwanted noise” in what is being logged. These categories are built on the standard .NET Core ILogger and are supported in a fluent way. See Arc4u/ILoggerExtension.cs at master · GFlisch/Arc4u (github.com). This allows us to write: logger.Technical().Information(&lt;span class="hljs-string"&gt;"Start the Api process."&lt;/span&gt;).Log(); logger.Business().Warning(&lt;span class="hljs-string"&gt;"User Not Found"&lt;/span&gt;).Log(); … resulting in cleaner code. npm install --production NODE_ENV=production node app Paris Paris is the capital of France. Tokyo Tokyo is the capital of Japan.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2023/08/04/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2023-08-04T11:04:48+02:00</published><updated>2023-08-04T11:04:48+02:00</updated><id>http://localhost:4000/jekyll/update/2023/08/04/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2023/08/04/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>